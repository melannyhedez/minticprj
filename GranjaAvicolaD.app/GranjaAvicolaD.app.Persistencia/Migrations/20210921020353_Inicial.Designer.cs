// <auto-generated />
using System;
using GranjaAvicolaD.app.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GranjaAvicolaD.app.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210921020353_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.DatosInicioSesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pasword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usuario_idId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_idId");

                    b.ToTable("DatosInicioSesiones");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Galpon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumeroGallinas")
                        .HasColumnType("int");

                    b.Property<int?>("Operario_idId")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Veterinario_idId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Operario_idId");

                    b.HasIndex("Veterinario_idId");

                    b.ToTable("Galpones");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CantidadAlimento")
                        .HasColumnType("real");

                    b.Property<int>("GallinasEnfermasPorCuarentena")
                        .HasColumnType("int");

                    b.Property<int?>("Galpon_idId")
                        .HasColumnType("int");

                    b.Property<float>("NivelAgua")
                        .HasColumnType("real");

                    b.Property<float>("Temperatura")
                        .HasColumnType("real");

                    b.Property<int?>("Usuario_idId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Galpon_idId");

                    b.HasIndex("Usuario_idId");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Usuario_idId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_idId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Sugerencias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usuario_idId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_idId");

                    b.ToTable("Sugerencia");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.DatosInicioSesion", b =>
                {
                    b.HasOne("GranjaAvicolaD.app.Dominio.Usuario", "Usuario_id")
                        .WithMany()
                        .HasForeignKey("Usuario_idId");

                    b.Navigation("Usuario_id");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Galpon", b =>
                {
                    b.HasOne("GranjaAvicolaD.app.Dominio.DatosInicioSesion", "Operario_id")
                        .WithMany()
                        .HasForeignKey("Operario_idId");

                    b.HasOne("GranjaAvicolaD.app.Dominio.DatosInicioSesion", "Veterinario_id")
                        .WithMany()
                        .HasForeignKey("Veterinario_idId");

                    b.Navigation("Operario_id");

                    b.Navigation("Veterinario_id");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Historia", b =>
                {
                    b.HasOne("GranjaAvicolaD.app.Dominio.Galpon", "Galpon_id")
                        .WithMany()
                        .HasForeignKey("Galpon_idId");

                    b.HasOne("GranjaAvicolaD.app.Dominio.Usuario", "Usuario_id")
                        .WithMany()
                        .HasForeignKey("Usuario_idId");

                    b.Navigation("Galpon_id");

                    b.Navigation("Usuario_id");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Registro", b =>
                {
                    b.HasOne("GranjaAvicolaD.app.Dominio.Usuario", "Usuario_id")
                        .WithMany()
                        .HasForeignKey("Usuario_idId");

                    b.Navigation("Usuario_id");
                });

            modelBuilder.Entity("GranjaAvicolaD.app.Dominio.Sugerencias", b =>
                {
                    b.HasOne("GranjaAvicolaD.app.Dominio.Usuario", "Usuario_id")
                        .WithMany()
                        .HasForeignKey("Usuario_idId");

                    b.Navigation("Usuario_id");
                });
#pragma warning restore 612, 618
        }
    }
}
